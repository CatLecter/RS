"""empty message

Revision ID: 01f2a1ba7867
Revises: 50ce8ed67973
Create Date: 2022-03-20 16:10:30.412209

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "01f2a1ba7867"
down_revision = "50ce8ed67973"
branch_labels = None
depends_on = None


def upgrade():
    op.add_column("users", sa.Column("is_totp_enabled", sa.Boolean(), nullable=False))
    op.add_column(
        "users", sa.Column("two_factor_secret", sa.String(length=255), nullable=True)
    )
    op.add_column("users", sa.Column("social_id", sa.String(length=255), nullable=True))
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(length=80), nullable=True
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(length=80), nullable=False
    )
    op.drop_column("users", "social_id")
    op.drop_column("users", "two_factor_secret")
    op.drop_column("users", "is_totp_enabled")
    op.create_table(
        "auth_history_desktop",
        sa.Column("uuid", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_uuid", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "user_agent", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column("device", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column(
            "ip_address", sa.VARCHAR(length=40), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"], ["users.uuid"], name="auth_history_user_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("uuid", "device", name="auth_history_desktop_pkey"),
    )
    op.create_table(
        "auth_history_other",
        sa.Column("uuid", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_uuid", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "user_agent", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column("device", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column(
            "ip_address", sa.VARCHAR(length=40), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"], ["users.uuid"], name="auth_history_user_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("uuid", "device", name="auth_history_other_pkey"),
    )
    op.create_table(
        "auth_history_mobile",
        sa.Column("uuid", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_uuid", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "user_agent", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column("device", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column(
            "ip_address", sa.VARCHAR(length=40), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"], ["users.uuid"], name="auth_history_user_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("uuid", "device", name="auth_history_mobile_pkey"),
    )
    op.create_table(
        "auth_history_tablet",
        sa.Column("uuid", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_uuid", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "user_agent", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column("device", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column(
            "ip_address", sa.VARCHAR(length=40), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"], ["users.uuid"], name="auth_history_user_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("uuid", "device", name="auth_history_tablet_pkey"),
    )
